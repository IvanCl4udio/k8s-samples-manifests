apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: nfs-sto
  name: nfs-sto
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: nfs-client-sa
  namespace: nfs-sto
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-cluster-role
  namespace: nfs-sto
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-cluster-role-binding
  namespace: nfs-sto
subjects:
  - kind: ServiceAccount
    name: nfs-client-sa
    namespace: nfs-sto
roleRef:
  kind: ClusterRole
  name: nfs-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-role
  namespace: nfs-sto
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-role-binding
  namespace: nfs-sto
subjects:
  - kind: ServiceAccount
    name: nfs-client-sa
    namespace: nfs-sto
roleRef:
  kind: Role
  name: nfs-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nfs-provisioner-controller
  namespace: nfs-sto
spec:   
  selector:
    matchLabels:
      app: nfs-storage-provisioner
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nfs-storage-provisioner
    spec:
      serviceAccountName: nfs-client-sa
      containers:
        - name: nfs-storage-provisioner
          image: gcr.io/k8s-staging-sig-storage/nfs-subdir-external-provisioner:v4.0.0
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: managed-nfs-storage
            - name: NFS_SERVER
              value: 192.168.0.118
            - name: NFS_PATH
              value: /srv/nfs/data
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "128Mi"
              cpu: "250m"
      volumes:
        - name: nfs-client-root
          nfs:
            server: 192.168.0.118
            path: /srv/nfs/data
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: managed-nfs-storage
  namespace: nfs-sto
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: managed-nfs-storage
parameters:
  archiveOnDelete: "false"
